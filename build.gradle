// Modernized Gradle (8.7) and AGP (8.6.0) root build script

plugins {
  id 'com.android.application' version '8.6.0' apply false
  id 'com.android.library'     version '8.6.0' apply false
  id 'org.jetbrains.kotlin.android' version '1.9.24' apply false
  id 'io.codearte.nexus-staging' version '0.30.0'
}

ext {
  kotlinVersion = '1.9.24'
}

allprojects {
  group = findProperty('GROUP') ?: 'org.smartregister'
  version = findProperty('VERSION_NAME') ?: '0.0.1-SNAPSHOT'

  repositories {
    mavenLocal()
    google()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://cloudant.github.io/cloudant-sync-eap/repository' }
    maven { url 'https://s3.amazonaws.com/repo.commonsware.com' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    // JCenter fallback removed; all deps via Central/JitPack
    // (Removed Optional GitHub Packages resolver for com.nerdstone)
  }

  configurations.all {
    resolutionStrategy {
      dependencySubstitution {
        // Examples; tune as your graph evolves
        substitute(module('com.github.BlueCodeSystems:opensrp-client-core'))
          .using(module('io.github.bluecodesystems:opensrp-client-core:6.2.2'))
        substitute(module('io.github.bluecodesystems:android-p2p-sync'))
          .using(module('com.github.BlueCodeSystems:android-p2p-sync:v0.4.3'))
        substitute(module('com.nerdstone:neat-form-core'))
          .using(module('com.github.BlueCodeSystems:neat-form:v1.1.6'))
        // Map legacy Koin 2.x modules to the Koin 3 Android artifact to avoid JCenter
        substitute(module('org.koin:koin-android'))
          .using(module('io.insert-koin:koin-android:3.5.6'))
        substitute(module('org.koin:koin-androidx-scope'))
          .using(module('io.insert-koin:koin-android:3.5.6'))
        substitute(module('org.koin:koin-androidx-viewmodel'))
          .using(module('io.insert-koin:koin-android:3.5.6'))
      }
      force 'com.commonsware.cwac:saferoom.x:1.3.0'
    }
    exclude group: 'com.commonsware.cwac', module: 'saferoom'
  }
}

// Tests on JDK 17: open modules; be conservative with forking
subprojects { p ->
  tasks.withType(Test).configureEach { t ->
    maxParallelForks = 1
    forkEvery = 0
    jvmArgs(
      '--add-opens=java.base/java.lang=ALL-UNNAMED',
      '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
      '--add-opens=java.base/java.io=ALL-UNNAMED',
      '--add-opens=java.base/java.net=ALL-UNNAMED',
      '--add-opens=java.base/java.util=ALL-UNNAMED',
      '--add-opens=java.base/java.text=ALL-UNNAMED',
      '--add-opens=java.base/java.security=ALL-UNNAMED',
      '--add-opens=java.base/jdk.internal.reflect=ALL-UNNAMED',
      '--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
      '--add-opens=java.base/jdk.internal.util=ALL-UNNAMED',
      '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
      '--add-opens=java.base/sun.security.util=ALL-UNNAMED',
      '--add-opens=java.desktop/java.awt.font=ALL-UNNAMED',
      '--add-exports=java.base/jdk.internal.reflect=ALL-UNNAMED'
    )
  }
}

// Compile memory for workers
allprojects {
  tasks.withType(JavaCompile).configureEach {
    options.fork = true
    options.forkOptions.memoryMaximumSize = '2048m'
  }
}

// Nexus staging (optional)
nexusStaging {
  serverUrl = "https://s01.oss.sonatype.org/service/local/"
  // username/password via -PsonatypeUsername/-PsonatypePassword
}

tasks.register('clean', Delete) {
  delete rootProject.buildDir
}

def isReleaseBuild() { !version.toString().contains('SNAPSHOT') }
